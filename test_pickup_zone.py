# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–∏–∫–∏ pickup –∑–æ–Ω—ã.
–°–∏–º—É–ª–∏—Ä—É–µ—Ç –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ —Ä—è–¥–æ–º —Å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–º.
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app import create_app, db
from app.models import User, Order
from app.utils.game_helper import check_player_zones, get_order_for_user
from app.utils.gps_helper import calculate_distance_meters

def test_pickup_zone():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ pickup –∑–æ–Ω—ã"""
    
    app = create_app('development')
    
    with app.app_context():
        print("=" * 60)
        print("üß™ –¢–ï–°–¢: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞ –≤ –∑–æ–Ω–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞")
        print("=" * 60)
        
        # 1. –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = User.query.get(1)
        if not user:
            user = User.create_user(username="TestUser")
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username} (ID: {user.id})")
        else:
            print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.username} (ID: {user.id})")
        
        # 2. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∑–∞–∫–∞–∑ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print("\nüì¶ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑...")
        order_data = get_order_for_user(user.id)
        
        if not order_data:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑")
            return
        
        print(f"‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω:")
        print(f"   –†–µ—Å—Ç–æ—Ä–∞–Ω: {order_data['pickup']['name']}")
        print(f"   –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ({order_data['pickup']['lat']}, {order_data['pickup']['lng']})")
        print(f"   –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {order_data['dropoff']['address']}")
        print(f"   –î–∏—Å—Ç–∞–Ω—Ü–∏—è: {order_data['distance_km']} –∫–º")
        
        # 3. –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑ –∏–∑ –ë–î
        order = Order.query.get(order_data['id'])
        
        # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –∏–≥—Ä–æ–∫–∞
        print("\n" + "=" * 60)
        print("üìç –¢–ï–°–¢ 1: –ò–≥—Ä–æ–∫ –¥–∞–ª–µ–∫–æ –æ—Ç —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ (100–º)")
        print("=" * 60)
        
        # –ü–æ–∑–∏—Ü–∏—è –≤ 100 –º–µ—Ç—Ä–∞—Ö –æ—Ç —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ (–ø—Ä–∏–º–µ—Ä–Ω–æ 0.001 –≥—Ä–∞–¥—É—Å–∞)
        test_lat_far = order.pickup_lat + 0.001
        test_lng_far = order.pickup_lng + 0.001
        
        distance_far = calculate_distance_meters(
            order.pickup_lat, order.pickup_lng,
            test_lat_far, test_lng_far
        )
        
        print(f"   –ü–æ–∑–∏—Ü–∏—è –∏–≥—Ä–æ–∫–∞: ({test_lat_far}, {test_lng_far})")
        print(f"   –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞: {distance_far:.1f} –º")
        
        zones_far = check_player_zones(user.id, test_lat_far, test_lng_far)
        print(f"   –í –∑–æ–Ω–µ pickup: {'‚úÖ –î–ê' if zones_far.get('in_pickup_zone') else '‚ùå –ù–ï–¢'}")
        print(f"   –ú–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å –∑–∞–∫–∞–∑: {'‚úÖ –î–ê' if zones_far.get('can_pickup') else '‚ùå –ù–ï–¢'}")
        
        # 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∑–∏—Ü–∏—é –í–ù–£–¢–†–ò —Ä–∞–¥–∏—É—Å–∞ (20–º)
        print("\n" + "=" * 60)
        print("üìç –¢–ï–°–¢ 2: –ò–≥—Ä–æ–∫ –±–ª–∏–∑–∫–æ –∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É (20–º)")
        print("=" * 60)
        
        # –ü–æ–∑–∏—Ü–∏—è –≤ 20 –º–µ—Ç—Ä–∞—Ö (–ø—Ä–∏–º–µ—Ä–Ω–æ 0.0002 –≥—Ä–∞–¥—É—Å–∞)
        test_lat_near = order.pickup_lat + 0.0002
        test_lng_near = order.pickup_lng + 0.0002
        
        distance_near = calculate_distance_meters(
            order.pickup_lat, order.pickup_lng,
            test_lat_near, test_lng_near
        )
        
        print(f"   –ü–æ–∑–∏—Ü–∏—è –∏–≥—Ä–æ–∫–∞: ({test_lat_near}, {test_lng_near})")
        print(f"   –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞: {distance_near:.1f} –º")
        
        zones_near = check_player_zones(user.id, test_lat_near, test_lng_near)
        print(f"   –í –∑–æ–Ω–µ pickup: {'‚úÖ –î–ê' if zones_near.get('in_pickup_zone') else '‚ùå –ù–ï–¢'}")
        print(f"   –ú–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å –∑–∞–∫–∞–∑: {'‚úÖ –î–ê' if zones_near.get('can_pickup') else '‚ùå –ù–ï–¢'}")
        
        # 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º –¢–û–ß–ù–£–Æ –ø–æ–∑–∏—Ü–∏—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ (0–º)
        print("\n" + "=" * 60)
        print("üìç –¢–ï–°–¢ 3: –ò–≥—Ä–æ–∫ —Ç–æ—á–Ω–æ –Ω–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ (0–º)")
        print("=" * 60)
        
        print(f"   –ü–æ–∑–∏—Ü–∏—è –∏–≥—Ä–æ–∫–∞: ({order.pickup_lat}, {order.pickup_lng})")
        print(f"   –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞: 0.0 –º")
        
        zones_exact = check_player_zones(user.id, order.pickup_lat, order.pickup_lng)
        print(f"   –í –∑–æ–Ω–µ pickup: {'‚úÖ –î–ê' if zones_exact.get('in_pickup_zone') else '‚ùå –ù–ï–¢'}")
        print(f"   –ú–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å –∑–∞–∫–∞–∑: {'‚úÖ –î–ê' if zones_exact.get('can_pickup') else '‚ùå –ù–ï–¢'}")
        
        # 7. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        print("\n" + "=" * 60)
        print("üìä –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø")
        print("=" * 60)
        
        from flask import current_app
        config = current_app.config['GAME_CONFIG']
        print(f"   –†–∞–¥–∏—É—Å pickup: {config['pickup_radius']} –º")
        print(f"   –†–∞–¥–∏—É—Å dropoff: {config['dropoff_radius']} –º")
        print(f"   –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: {order.status}")
        print(f"   –ó–∞–∫–∞–∑ –∑–∞–±—Ä–∞–Ω: {'‚úÖ –î–ê' if order.pickup_time else '‚ùå –ù–ï–¢'}")
        
        print("\n" + "=" * 60)
        print("‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")
        print("=" * 60)

if __name__ == '__main__':
    test_pickup_zone()
